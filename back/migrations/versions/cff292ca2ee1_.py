"""empty message

Revision ID: cff292ca2ee1
Revises: 
Create Date: 2024-06-13 05:08:33.310485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cff292ca2ee1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_number', sa.Integer(), nullable=True),
    sa.Column('sensor_location', sa.String(length=120), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='sensorstatus'), server_default='pending', nullable=False),
    sa.Column('creation_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sensor_number')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=60), nullable=True),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='userstatus'), server_default='pending', nullable=False),
    sa.Column('user_role', sa.Enum('master', 'admin', 'operator', name='userrole'), server_default='operator', nullable=False),
    sa.Column('creation_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('humidity_sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('humidity', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.sensor_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temperature_sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.sensor_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weight_sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.sensor_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weight_sensors')
    op.drop_table('temperature_sensors')
    op.drop_table('humidity_sensors')
    op.drop_table('users')
    op.drop_table('sensors')
    # ### end Alembic commands ###
